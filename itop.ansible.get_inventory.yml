---
- name: Get from iTop the Ansible inventory
  hosts: localhost 

  vars:
    url: "{{ itop_root }}/webservices/rest.php?version={{ itop_ws_version }}"
    format: "{{ itop_ws_ansible_inventory_format | lower }}"
    file: "{{ local_inventory_path }}/{{ local_inventory_name }}.{{ format }}"
    current_time: "{{ ansible_date_time.date }}-{{ ansible_date_time.time | replace(':','_') }}"

  tasks:
    - name: Check that the current inventory file exits
      stat:
        path: "{{ file }}"
      register: stat_file

    - name: Backup current inventory if it exists
      ansible.builtin.copy:
        src: "{{ file }}"
        dest: "{{ file }}.{{ current_time }}"
      when: stat_file.stat.exists

    - name: Call operation ansible/get_inventory 
      ansible.builtin.uri:
        url: "{{ url }}"
        method: POST
        force_basic_auth: true
        url_username: "{{ itop_ws_auth_user }}" 
        url_password: "{{ itop_ws_auth_pwd }}"
        body: json_data= {
          "operation":"ansible/get_inventory",
          "uuid":"{{ itop_ws_ansible_uuid }}",
          "inventory":"{{ itop_ws_ansible_inventory }}",
          "format":"{{ format }}"
          }
        return_content: true
      register: response 

    - name: Save the Json data
      ansible.builtin.set_fact:
        jsondata: "{{ response.content | from_json }}"

    - name: Get error code and message
      ansible.builtin.set_fact:
        error_code: "{{ jsondata | json_query('code') }}"
        error_message: "{{ jsondata | json_query('message') }}"

    - name: Display error, if any
      ansible.builtin.debug:
        var: error_message
      when: error_code != "0"

    - name: Get text_file
      ansible.builtin.set_fact:
        text_file: "{{ jsondata | json_query(param) }}"
      vars:
        param: 'objects.*.text_file'
      when: error_code == "0"

    - name: Save result in file
      ansible.builtin.copy:
        content: "{{ text_file[0] }}"
        dest: "{{ file }}"
      when: error_code == "0"

#   - delete backup if files are the same ?